# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type SupplierModel {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String!
  logo: String!
  isActive: Boolean!
  email: String!
  phones: String!
  isBlocked: Boolean!
  cnpj: String!
  address: String!
  extraInfo: String
  products: [ProductModel!]
  category: CategoryModel
  categoryId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CategoryModel {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String!
  isActive: Boolean!
  products: [ProductModel!]!
  suppliers: [SupplierModel!]!
}

type ProductModel {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  isActive: Boolean!
  sku: String!
  barCode: String!
  price: Float!
  currentPrice: Float!
  quantity: Float!
  brand: String!
  description: String!
  category: CategoryModel!
  supplier: SupplierModel!
  supplierId: String!
  categoryId: String!
  images: String!
  extraInfo: String!
  color: String!
  betterPriceFromBeforeLastMonth: Boolean!
  isPrime: Boolean!
  technicalInfo: String!
}

type BaseResponse {
  ok: Boolean!
  error: String
}

type ProductsDTOResponse {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  isActive: Boolean!
  sku: String!
  barCode: String!
  price: Float!
  currentPrice: Float!
  quantity: Float!
  brand: String!
  description: String!
  category: CategoryModel!
  supplier: SupplierModel!
  supplierId: String!
  categoryId: String!
  images: String!
  extraInfo: String!
  color: String!
  betterPriceFromBeforeLastMonth: Boolean!
  isPrime: Boolean!
  technicalInfo: String!
}

type ProductsResponse {
  ok: Boolean!
  error: String
  data: [ProductsDTOResponse!]
}

type ProductResponse {
  ok: Boolean!
  error: String
  data: ProductsDTOResponse
}

type SuppliersDTOResponse {
  id: String!
  name: String!
  description: String!
  logo: String!
  isActive: Boolean!
  email: String!
  phones: String!
  isBlocked: Boolean!
  cnpj: String!
  address: String!
  extraInfo: String
  products: [ProductModel!]
  category: CategoryModel
}

type SuppliersResponse {
  ok: Boolean!
  error: String
  data: [SuppliersDTOResponse!]
}

type SupplierResponse {
  ok: Boolean!
  error: String
  data: SuppliersDTOResponse
}

type CategoriesDTOResponse {
  id: String!
  name: String!
  description: String!
  isActive: Boolean!
  products: [ProductModel!]!
  suppliers: [SupplierModel!]!
}

type CategoriesResponse {
  ok: Boolean!
  error: String
  data: [CategoriesDTOResponse!]
}

type CategoryResponse {
  ok: Boolean!
  error: String
  data: CategoriesDTOResponse
}

type UsersDTOResponse {
  id: String!
  name: String!
  email: String!
  avatar: String
  role: role!
}

enum role {
  ADMIN
  SUPER_ADMIN
  SUPPLIER
  CUSTOMER
  MANAGER
  ASSISTANT
}

type UsersResponse {
  ok: Boolean!
  error: String
  data: [UsersDTOResponse!]
}

type UserResponse {
  ok: Boolean!
  error: String
  data: UsersDTOResponse
}

type LoginOutput {
  ok: Boolean!
  error: String
  token: String
}

type Query {
  listProducts: ProductsResponse!
  getProduct(id: String!): ProductResponse!
  suppliers: SuppliersResponse!
  getSupplier(id: String!): SupplierResponse!
  listCategories: CategoriesResponse!
  getCategory(id: String!): CategoryResponse!
  users: UsersResponse!
  getUser(id: String!): UserResponse!
}

type Mutation {
  createProduct(input: CreateProductInput!): BaseResponse!
  updateProduct(updateProductInput: UpdateProductInput!): BaseResponse!
  deleteProduct(id: Int!): BaseResponse!
  newSupplier(data: CreateSupplierInput!): BaseResponse!
  updateSupplier(data: UpdateSupplierArgs!): BaseResponse!
  removeSupplier(id: String!): BaseResponse!
  addNewCategory(payload: CreateCategoryInput!): BaseResponse!
  updateCategory(input: UpdateCategoryArgs!): BaseResponse!
  removeCategory(id: String!): BaseResponse!
  createUser(input: CreateUserDto!): BaseResponse!
  removeUser(id: String!): BaseResponse!
  login(input: LoginDto!): LoginOutput!
}

input CreateProductInput {
  title: String!
  isActive: Boolean!
  sku: String!
  barCode: String!
  price: Float!
  currentPrice: Float!
  quantity: Float!
  brand: String!
  description: String!
  supplierId: String!
  categoryId: String!
  images: String!
  extraInfo: String!
  color: String!
  betterPriceFromBeforeLastMonth: Boolean!
  isPrime: Boolean!
  technicalInfo: String!
}

input UpdateProductInput {
  title: String
  isActive: Boolean
  sku: String
  barCode: String
  price: Float
  currentPrice: Float
  quantity: Float
  brand: String
  description: String
  supplierId: String
  categoryId: String
  images: String
  extraInfo: String
  color: String
  betterPriceFromBeforeLastMonth: Boolean
  isPrime: Boolean
  technicalInfo: String
  id: Int!
}

input CreateSupplierInput {
  name: String!
  description: String!
  isActive: Boolean!
  email: String!
  phones: String!
  isBlocked: Boolean!
  cnpj: String!
  address: String!
  extraInfo: String
  categoryId: String!
}

input UpdateSupplierArgs {
  id: String!
  data: UpdateSupplierInput!
}

input UpdateSupplierInput {
  name: String
  description: String
  isActive: Boolean
  email: String
  phones: String
  isBlocked: Boolean
  cnpj: String
  address: String
  extraInfo: String
  categoryId: String
}

input CreateCategoryInput {
  name: String!
  description: String!
  isActive: Boolean!
}

input UpdateCategoryArgs {
  id: String!
  data: UpdateCategoryInput!
}

input UpdateCategoryInput {
  name: String
  description: String
  isActive: Boolean
}

input CreateUserDto {
  name: String!
  password: String!
  email: String!
  avatar: String
  role: role!
  confirmPassword: String!
}

input LoginDto {
  password: String!
  email: String!
}